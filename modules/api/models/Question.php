<?php
/**
 * Created by PhpStorm.
 * User: User
 * Date: 28.07.2017
 * Time: 7:50
 */

namespace app\modules\api\models;


use yii\helpers\ArrayHelper;

/**
 * Class Question
 * @property Answer[] $answersDb
 * @package app\modules\api\models
 */
class Question extends \app\models\Question
{
    public function rules()
    {
        return ArrayHelper::merge(parent::rules(), [
            ['answers', 'answersValidate']
        ]);
    }


    public function fields()
    {
        return [
            'id',
            'module_id',
            'theme_id',
            'title',
            'sort',
            'file',
            'answers',
            'comment_after',
        ];
    }

    protected $_answers;

    public function getAnswersDb()
    {
        return $this->hasMany(Answer::className(), ['question_id' => 'id'])->orderBy(['sort' => SORT_ASC]);
    }

    public function getAnswers()
    {
        if (!$this->_answers) {
            $this->_answers = $this->answersDb;
        }
        return $this->_answers; // TODO: Change the autogenerated stub
    }

    public function setAnswers($value)
    {
        $this->_answers = $value;
    }
    /** @var array|Answer[] */
    protected $_answersStore = [];
    public function answersValidate($attribute) {
        $this->_answersStore = [];
        $existTrueAnswer = false;
        foreach ($this->$attribute as $index => $item) {
            $model = null;
            if (isset($item['id'])) {
                $model = Answer::findOne($item['id']);
            }
            $model = isset($model) ? $model : new Answer();
            $model->load($item, '');
            if ($model->is_true == 1) {
                $existTrueAnswer = true;
            }
            if (!$model->validate()) {
                foreach ($model->getFirstErrors() as $attr => $error) {
                    $this->addError("answers-$index-$attr", $error);
                }
            }
            $this->_answersStore[] = $model;
        }
        if (!$existTrueAnswer) {
            $this->addError($attribute, 'Необходимо указать хотя бы 1 правльный ответ');
        }
    }

    public function afterSave($insert, $changedAttributes)
    {
        $this->updateAnswers();
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    protected function updateAnswers()
    {
        $delete = ArrayHelper::map($this->answersDb, 'id', 'id');
        foreach ($this->_answersStore as $model) {
            $model->question_id = $this->id;
            $model->save(false);
            if (isset($delete[$model->id])) {
                unset($delete[$model->id]);
            }
        }
        Answer::deleteAll(['in', 'id', $delete]);
    }
}